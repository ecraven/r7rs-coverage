#!/bin/bash

GUILE=${GUILE:-guile}

case "$1" in
    mit) SCHEME_EXE=mit_scheme_exec
         SCHEME_NAME=mit
         SCHEME_VERSION=$(mit-scheme --version | grep Release | cut -f 4 -d\  )
         ;;
    guile) SCHEME_EXE=guile_exec
           SCHEME_NAME=guile
           SCHEME_VERSION=$(${GUILE} --version | head -n 1 | cut -f 4 -d\   )
           ;;
    chibi) SCHEME_EXE=chibi_exec
           SCHEME_NAME=chibi
           SCHEME_VERSION=$(chibi-scheme  -V | cut -f 2 -d\  )
           ;;
    chicken) SCHEME_EXE=csi_exec
             SCHEME_NAME=chicken
             SCHEME_VERSION=$(csi -version | grep Version | cut -f 2 -d\   )
             ;;
    larceny) SCHEME_EXE=larceny_exec
             SCHEME_NAME=larceny
             SCHEME_VERSION=$(larceny --version | cut -f 2 -d\  )
             ;;
    mosh) SCHEME_EXE=mosh_exec
          SCHEME_NAME=mosh
          SCHEME_VERSION=$(mosh-scheme -v | cut -f 6 -d\  )
          ;;
    picrin) SCHEME_EXE=picrin_exec
            SCHEME_NAME=picrin
            SCHEME_VERSION="unknown"
            ;;
    gambitc) SCHEME_EXE=gambitc_exec
             SCHEME_NAME=gambitc
             SCHEME_VERSION="unknown"
             ;;
    gauche) SCHEME_EXE=gauche_exec
            SCHEME_NAME=gauche
            SCHEME_VERSION=$(gosh -V | cut -f 5 -d\  )
            ;;
    racket) SCHEME_EXE=racket_exec
            SCHEME_NAME=racket
            SCHEME_VERSION=$(racket --version | cut -f 4 -d\ | sed 's/\.$//')
            ;;
    cyclone) SCHEME_EXE=cyclone_exec
            SCHEME_NAME=cyclone
            SCHEME_VERSION=$(cyclone -v | grep Version | sed 's/.*Version \([^ ][^ ]*\).*/\1/')
            ;;

    *) echo "Unknown Scheme"
       exit -1
       ;;
esac


racket_exec() {
    racket $1
    status=$?
}

cyclone_exec() {
    cyclone $1 < /dev/null > /tmp/cyclone.log 2>&1
    if grep -i 'error: ' /tmp/cyclone.log
    then
        status=1
    else
        status=0
    fi
}

gauche_exec() {
    gosh -r7 -b $1
    status=$?
}

gambitc_exec() {
    exe=$(mktemp)
    ( gambitc -o $exe -exe $1 && $exe ) >> gambitc.log 2>&1
    status=$?
    rm $exe
}

picrin_exec() {
    picrin $1
    status=$?
}

mosh_exec() {
    mosh-scheme $1
    status=$?
}

larceny_exec() {
    larceny -r7rs -program $1 < /dev/null > /tmp/larceny.log 2>&1
    if grep 'Error: ' /tmp/larceny.log
    then
        status=1
    else
        status=0
    fi
}

csi_exec() {
    csi < $1 > /tmp/csi.log 2>&1
    if grep 'Error: ' /tmp/csi.log
    then
        status=1
    else
        status=0
    fi
}

mit_scheme_exec() {
    mit-scheme < $1
    status=$?
}

guile_exec() {
    ${GUILE} $1 > /tmp/guile.log 2>&1
    status=$?
}

chibi_exec() {
    chibi-scheme < $1 > /tmp/chibi.log 2>&1
    if grep 'ERROR' /tmp/chibi.log
    then
        status=1
    else
        status=0
    fi
}
temp_dir=$(mktemp -d)
for dir in input/*
do
    #echo running group $dir
    for i in $dir/*.scm
    do
        #echo running file $i
        csplit --quiet -f ${temp_dir}/cov -b '%02d.scm' $i '/;; TEST/' '{*}'
        for file in ${temp_dir}/*
        do
            if [ -s $file ]
            then
                {
                    tmpfile=$(mktemp)
                    test=$(grep ';; TEST' $file | cut -f 3 -d\  )
                    params=$(grep ';; TEST' $file | cut -f 4- -d\  )
                    d=$(echo $dir | sed 's|input/||')
                    TEST_GROUP=$(echo $i | sed -e 's|input/||' -e 's/.scm//')
                    if [ -r preludes/$d/$SCHEME_NAME.scm ]
                    then
                        cat preludes/$d/$SCHEME_NAME.scm > $tmpfile
                    fi
                    if [ -r preludes/$SCHEME_NAME.scm ]
                    then
                        cat preludes/$SCHEME_NAME.scm >> $tmpfile
                    fi
                    cat $file >> $tmpfile
                    $SCHEME_EXE $tmpfile
                    rm $tmpfile
                } >> $SCHEME_NAME.log 2>&1
                if [ $status == 0 ]; then
                    # don't do anything
                    {
                        echo "$SCHEME_NAME,$SCHEME_VERSION,$TEST_GROUP,OK,$test,$params"
                    } | tee -a errors.csv
                else
                    {
                        echo "$SCHEME_NAME,$SCHEME_VERSION,$TEST_GROUP,ERROR,$test,$params"
                    } | tee -a errors.csv
                fi
            fi
        done
        rm $temp_dir/*.scm
    done
done
rm -Rf $temp_dir
# Local Variables:
# mode: sh
# End:
